package jzOffer.chap6;

/**
 * 给定一个数组A[0,1,...,n-1],请构建一个数组B[0,1,...,n-1],其中B中的元素B[i]=A[0]*A[1]*...*A[i-1]*A[i+1]*...*A[n-1]。不能使用除法。
 */
public class Multiply {
    /**
     * B[i] 分成两个部分
     * @param A
     * @return
     */
    //B[i]=A[0]*A[1]*...*A[i-1]*A[i+1]*...*A[n-1]
    //从左到右算 B[i]=A[0]*A[1]*...*A[i-1]
    //从右到左算B[i]*=A[i+1]*...*A[n-1]
    public int[] multiply(int[] A) {
      int len = A.length;
      int[] B = new int[len];
      B[0] = 1;
      //下三角用连乘可以很容求得，
      for (int i=1;i<len;i++){
          B[i] = B[i-1] * A[i-1];
      }
      int temp = 1;
      //上三角，从下向上也是连乘
      for (int j=len-2;j>=0;j--){
          temp*=A[j+1];
          B[j]*=temp;
      }

      return B;
    }
}
